// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    window.models.GenericElement = Backbone.Model.extend({
      defaults: function() {
        return {
          listItems: [1, 2, 3]
        };
      }
    });
    window.collections.GenericElements = Backbone.Collection.extend({
      model: models.GenericElement,
      url: '/generic'
    });
    window.views.GenericList = Backbone.View.extend({
      initialize: function() {
        this.controller = this.options.controller;
        this.wrapper = $(".control-section").eq(this.controller.index);
        this.$el = this.wrapper.find(".generic-elements");
        console.log(this.controller.index);
        return this.render();
      },
      render: function() {
        var $el;
        $el = this.$el;
        _.each(this.collection.models, function(el) {
          return $el.append(new views.GenericListItem({
            model: el
          }).render().el);
        });
        return this;
      }
    });
    window.views.GenericListItem = Backbone.View.extend({
      initialize: function() {
        var self;
        this.baseModel = this.model.toJSON();
        self = this;
        return this.$el.draggable({
          revert: true,
          helper: "clone",
          cursor: "move",
          zIndex: 999999,
          start: function(e, ui) {
            var toAdd;
            $(ui.helper).addClass("dragging");
            toAdd = $.extend({}, self.model.toJSON());
            console.log(toAdd);
            return window.currentDraggingModel = toAdd;
          },
          stop: function(e, ui) {
            $(ui.item).removeClass("dragging").remove();
            if (ui.helper.data('dropped') === true) {
              return $(e.target).remove();
            }
          }
        });
      },
      template: $("#generic-element").html(),
      tagName: 'li',
      render: function() {
        var $el;
        $el = this.$el;
        $el.html(_.template(this.template, this.model.toJSON()));
        return this;
      }
    });
    window.views.genericElement = window.views.draggableElement.extend({
      afterRender: function(self) {
        return self.$el.hide().fadeIn(350);
      },
      initialize: function() {
        return $.extend(this.events, {
          "keyup .title-setter": function(e) {
            console.log(this);
            this.model.set({
              'customHeader': $(e.currentTarget).val(),
              'title': $(e.currentTarget).val()
            });
            return e.stopPropagation();
          }
        });
      }
    });
    window.views['listElement'] = window.views.genericElement.extend({
      template: $("#generic-list").html(),
      initialize: function() {
        return $.extend(this.events, {
          "click .add-list-item": function(e) {
            var genericList, index, innerText;
            genericList = this.$el.find(".generic-list");
            index = genericList.children().length;
            innerText = "Item " + (index + 1);
            $("<li/>").text(innerText).attr("contenteditable", true).appendTo(genericList);
            this.model.updateListItems(innerText, index);
            return e.stopPropagation();
          },
          "keyup .generic-list li": function(e) {
            var index, keyCode, target;
            keyCode = e.keyCode || e.which;
            target = $(e.currentTarget);
            index = target.index();
            if (target.index() === 0) {
              this.model.set("title", target.text());
            }
            return this.model.updateListItems(target.html(), index);
          },
          "click .remove-property-link": function(e) {
            $(e.currentTarget).closest(".property-link").slideUp("fast", function() {});
            return $(this).remove();
          }
        });
      }
    });
    window.views['Button'] = window.views.genericElement.extend({
      template: $("#button-template").html(),
      initialize: function() {
        return _.bindAll(this, "beforeRender");
      },
      beforeRender: function(self) {
        return this.$el.addClass("max-w3");
      }
    });
    window.views['CustomHeader'] = window.views.genericElement.extend({
      template: $("#custom-header").html()
    });
    return window.views['CustomText'] = window.views.genericElement.extend({
      template: $("#custom-text").html()
    });
  });

}).call(this);
