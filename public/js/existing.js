// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    window.existingSectionsList = null;
    window.views.ExistingSectionsList = Backbone.View.extend({
      initialize: function() {
        this.controller = this.options.controller;
        this.wrapper = $(".control-section").eq(this.controller.index);
        this.$el = $(".control-section").eq(this.controller.index).find(".existing-sections-layouts");
        this.el = this.$el.get();
        return this.render();
      },
      render: function() {
        var $el;
        $el = this.$el;
        return _.each(this.collection.models, function(section, i) {
          if (i === 0) {
            this.$(".placeholder").remove();
          }
          return $el.append(new views.SingleSectionWireFrame({
            model: section
          }).render().el);
        });
      }
    });
    window.views.SingleSectionWireFrame = Backbone.View.extend({
      tagName: 'li',
      template: $("#single-section").html(),
      initialize: function() {
        var self;
        this.makeModel();
        self = this;
        return this.$el.draggable({
          cancel: '.view-section',
          revert: "invalid",
          helper: "clone",
          cursor: "move",
          start: function() {
            return window.copiedModel = self.model.get("currentSection");
          },
          stop: function(e, ui) {
            $(ui.helper).removeClass("dragging");
            if (ui.helper.data('dropped') === true) {
              return $(e.target).remove();
            }
          }
        });
      },
      makeModel: function() {
        var copy, properties, section;
        section = this.model.get("currentSection");
        properties = this.model.get("properties");
        this.model.set("properties", new collections.Properties(properties));
        copy = new collections.Elements();
        _.each(section, function(model) {
          var el;
          el = new models.Element(model);
          return copy.add(el.deepCopy());
        });
        this.model = new models.SectionController({
          currentSection: copy,
          properties: this.model.get("properties"),
          section_title: this.model.get("section_title"),
          title: this.model.get("title")
        });
        return copy;
      },
      render: function() {
        var $ch, $el;
        $el = this.$el;
        $el.html(_.template(this.template, this.model.toJSON()));
        $ch = $el.children(".thumb");
        _.each(this.model.get("currentSection").models, function(child, i) {
          return $ch.append(new views.ElementThumbnail(child).render().el);
        });
        return this;
      },
      events: {
        "click .icon-magnifier": function() {
          return allSections.add(this.model);
        }
      }
    });
    return window.views.ElementThumbnail = Backbone.View.extend({
      tagName: 'div',
      className: 'thumb-object',
      initialize: function(opts) {
        return this.model = opts;
      },
      render: function() {
        var $el, styles;
        $el = this.$el;
        styles = this.model.styles;
        if (styles != null) {
          this.$el.css(styles);
        }
        _.each(this.model.child_els, function(child, i) {
          return $el.append(new views.ElementThumbnail({
            model: child
          }).render().el);
        });
        return this;
      }
    });
  });

}).call(this);
