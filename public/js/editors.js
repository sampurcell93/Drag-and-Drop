// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    var editors, _ref, _ref1, _ref2;
    editors = window.views.editors = {};
    editors["BaseEditor"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref = _Class.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      _Class.prototype.change_queue = [];

      _Class.prototype.tagName = "div class='modal'";

      _Class.prototype.initialize = function() {
        if (this.templates != null) {
          return this.templates = this.templates.concat([$("#skins").html(), $("#column-picker").html()]);
        } else {
          return this.templates = [$("#skins").html(), $("#column-picker").html()];
        }
      };

      _Class.prototype.render = function() {
        var cq, editor_content, self;
        self = this;
        this.link_el = this.options.link_el;
        cq = this.change_queue;
        editor_content = "";
        if (this.templates != null) {
          this.templates = this.templates.concat([$("#finalize-editing").html()]);
        }
        _.each(this.templates, function(template) {
          return editor_content += _.template(template, self.model.toJSON());
        });
        return this.$el.appendTo(document.body).html(editor_content);
      };

      _Class.prototype.enqueue = function(name, func) {
        return this.change_queue[name] = func;
      };

      _Class.prototype.events = {
        "click [data-columns]": function(e) {
          var $t, cols, coltypes, self;
          coltypes = ["two", "three", "four", "five", "six"];
          $t = $(e.currentTarget);
          cols = $t.data("columns");
          self = this;
          if (this.model != null) {
            this.enqueue("classes-columns", function() {
              return self.model.set("columns", cols);
            });
          }
          _.each(coltypes, function(type) {
            return $(self.link_el).removeClass("column " + type);
          });
          if (cols !== "") {
            return $(self.link_el).addClass("column " + cols);
          }
        },
        "click .confirm": function() {
          var cq, process, _results;
          cq = this.change_queue;
          _results = [];
          for (process in cq) {
            _results.push(cq[process]());
          }
          return _results;
        },
        "click .reject, .confirm": function() {
          $(document.body).removeClass("active-modal");
          return this.remove();
        }
      };

      return _Class;

    })(Backbone.View);
    editors["Button"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref1 = _Class.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      _Class.prototype.templates = [$("#button-editor").html()];

      _Class.prototype.initialize = function() {
        var self;
        self = this;
        return $.extend(this.events, {
          "keyup .title-setter": function() {
            return self.enqueue("title", function() {
              return self.model.set("title", self.$el.find(".title-setter").val());
            });
          }
        });
      };

      _Class.prototype.render = function() {
        var modal;
        _Class.__super__.render.apply(this, arguments);
        this.cq = this.change_queue;
        modal = this.el || $(".modal").first();
        return this.$el = $(this.el);
      };

      return _Class;

    })(editors["BaseEditor"]);
    return editors["accordion"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref2 = _Class.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      _Class.prototype.templates = [$("#accordion-layout").html()];

      return _Class;

    })(editors["BaseEditor"]);
  });

}).call(this);
