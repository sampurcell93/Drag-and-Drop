// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    var drag, dragging;
    $.fn.liveDraggable = function(opts) {
      return $(document).on("mouseenter", this.prop("tagName") || "section > div", function() {
        if (!$(this).data("init")) {
          return $(this).data("init", true).draggable(opts);
        }
      });
    };
    $.fn.liveDroppable = function(opts) {
      return $(document).on("mouseenter", this.prop("tagName") || "section > div", function() {
        if (!$(this).data("init")) {
          return $(this).data("init", true).droppable(opts);
        }
      });
    };
    drag = function() {
      var dragOpts, dropOpts, that;
      that = this;
      this.builder = $("section");
      dragOpts = {
        appendTo: 'body',
        cursor: 'move',
        delay: 100,
        revert: 'invalid',
        snap: true,
        opacity: .5,
        start: function() {},
        stop: function(e, ui) {},
        over: function(e, ui) {}
      };
      $("ul.draggable").children().liveDraggable(dragOpts);
      $("section").children().liveDraggable(dragOpts);
      dropOpts = {
        activeClass: 'dragging',
        greedy: true,
        hoverClass: 'dragging',
        tolerance: 'pointer',
        activate: function() {},
        drop: function(e, ui, i) {
          var innertags;
          innertags = {
            UL: 'li',
            OL: 'li'
          };
          drag = $("<" + (innertags[$(e.target).prop("tagName")] || "div") + "/>").append($(ui.draggable).html());
          console.log(e.target);
          $(e.target).append(drag);
          $(ui.draggable).remove();
          that.oneDropZone();
          return that.setLayout();
        },
        over: function(e, ui) {
          return console.log(e.target);
        }
      };
      $("section").liveDroppable(dropOpts);
      return $("ul.droppable").liveDroppable(dropOpts);
    };
    if (Modernizr.draganddrop) {
      dragging = new drag();
    } else {
      console.log("chump");
    }
    drag.prototype.setLayout = function() {
      var builder, length;
      builder = this.builder;
      length = Math.floor(12 / (builder.children().length % 7));
      return builder.children().removeClass().addClass('columns large-' + length);
    };
    return drag.prototype.oneDropZone = function() {
      var $drop;
      return $drop = $(".ui-droppable")[0];
    };
  });

}).call(this);
