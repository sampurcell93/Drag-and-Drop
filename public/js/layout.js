// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(document).ready(function() {
    var allLayouts, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8;
    allLayouts = [
      {
        type: 'Dynamic Layout',
        view: 'dynamicLayout'
      }, {
        type: 'Dynamic Container',
        view: 'dynamicContainer'
      }, {
        type: 'Tabbed Layout',
        view: 'tabs'
      }, {
        type: 'Accordion Layout',
        view: 'accordion'
      }, {
        type: 'Free Form Layout',
        view: 'Freeform',
        columns: '2',
        rows: '2'
      }
    ];
    window.models.Layout = (function(_super) {
      __extends(Layout, _super);

      function Layout() {
        _ref = Layout.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      return Layout;

    })(window.models.Element);
    window.collections.Layouts = Backbone.Collection.extend({
      model: models.Layout
    });
    window.views.LayoutList = Backbone.View.extend({
      el: ".layout-types ul",
      template: $("#picker-interface").html(),
      initialize: function() {
        this.controller = this.options.controller;
        this.collection = new collections.Layouts(allLayouts);
        this.wrapper = $(".control-section").eq(this.controller.index);
        this.$el = this.wrapper.find(this.el);
        this.el = this.$el.get();
        return this.render();
      },
      render: function() {
        var $el;
        $el = this.$el;
        _.each(this.collection.models, function(layout) {
          return $el.append(new views.OutsideDraggableItem({
            model: layout
          }).render().el);
        });
        return this;
      }
    });
    window.views.layout = (function(_super) {
      __extends(layout, _super);

      function layout() {
        _ref1 = layout.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      layout.prototype.columnTemplate = $("#column-picker").html();

      layout.prototype.skinTemplate = $("#skins").html();

      layout.prototype.initialize = function() {
        var self;
        layout.__super__.initialize.apply(this, arguments);
        self = this;
        this.$el.addClass("layout-wrapper");
        return this.listenTo(this.model.get("child_els"), "add", function(m, c, o) {
          if ((c != null) && c.length) {
            return self.$el.children(".placeholder").hide();
          } else {
            return self.$el.children(".placeholder").show();
          }
        });
      };

      layout.prototype.events = {
        "click .config-panel": function(e) {
          var column_types, modal, self;
          column_types = ["one", "two", "three", "four", "five", "six"];
          self = this;
          modal = window.launchModal(_.template(this.skinTemplate, {}) + _.template(this.columnTemplate, {}));
          modal.delegate("[data-columns]", "click", function() {
            var $t, cols;
            $t = $(this);
            cols = $t.data("columns");
            self.model.set({
              "classes": cols,
              "columns": cols
            });
            _.each(column_types, function(type) {
              return self.$el.removeClass("column " + type);
            });
            return self.$el.addClass("column " + cols);
          });
          console.log("launch from layouts");
          return e.stopPropagation();
        }
      };

      return layout;

    })(window.views.draggableElement);
    /* Inherited view events are triggered first - so if an indentical event binder is
        applied to a descendant, we can use event.stopPropagation() in order to stop the 
        higher level event from firing.
    */

    window.views["dynamicLayout"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref2 = _Class.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      _Class.prototype.template = $("#dynamic-layout").html();

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender");
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {};

      return _Class;

    })(window.views["layout"]);
    window.views["dynamicContainer"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref3 = _Class.__super__.constructor.apply(this, arguments);
        return _ref3;
      }

      _Class.prototype.template = $("#dynamic-container").html();

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender");
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {};

      return _Class;

    })(window.views["layout"]);
    window.views["accordion"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref4 = _Class.__super__.constructor.apply(this, arguments);
        return _ref4;
      }

      _Class.prototype.template = $("#accordion-layout").html();

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender");
        this.listenTo(this.model.get("child_els"), 'add', function(m, c, o) {
          return console.log("added, overwrite");
        });
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {
        if ((this.model.get("child_els").length)) {
          return this.$el.children(".placeholder").remove();
        }
      };

      return _Class;

    })(window.views["layout"]);
    window.views["tabItem"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref5 = _Class.__super__.constructor.apply(this, arguments);
        return _ref5;
      }

      _Class.prototype.controls = null;

      _Class.prototype.events = {
        "keyup": function(e) {
          var $t;
          $t = $(e.currentTarget);
          return this.model.set("tab_title", $t.html());
        },
        "click": function(e) {
          console.log("clickme");
          return this.$el.addClass("active-tab").siblings().removeClass("active-tab");
        }
      };

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender");
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {
        $("<h3/>").addClass("no-drag").text(this.model.get("title") || "Default title").prependTo(this.$el);
        this.$el.children("h3").first().attr("contentEditable", true);
        return this.$el.addClass("active-tab").siblings().removeClass("active-tab");
      };

      return _Class;

    })(views["draggableElement"]);
    window.views["tabs"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref6 = _Class.__super__.constructor.apply(this, arguments);
        return _ref6;
      }

      _Class.prototype.template = $("#tab-layout").html();

      _Class.prototype.settingsTemplate = $("#tab-layout-settings").html();

      _Class.prototype.linked_items = ['.tab-list li'];

      _Class.prototype.initialize = function() {
        var self;
        _.bindAll(this, "afterRender");
        self = this;
        this.listenTo(this.model.get("child_els"), {
          "add": this.formatNewModel,
          "remove": function(m, c, o) {
            if (c.length === 0) {
              return self.$el.children(".placeholder-text").show();
            }
          }
        });
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {
        var self, tabs;
        this.$el.addClass("tab-layout column six").children(".tab-list").tabs({
          active: this.options.activeTab || 1
        });
        tabs = this.model.get("child_els");
        self = this;
        return _.each(tabs, function(tab) {
          return self.formatNewModel(tab);
        });
      };

      _Class.prototype.formatNewModel = function(model, collection, options) {
        var $el;
        model.set("view", "tabItem");
        $el = this.$el;
        return $el.children(".placeholder-text").hide();
      };

      return _Class;

    })(window.views["layout"]);
    window.views["Freeform"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref7 = _Class.__super__.constructor.apply(this, arguments);
        return _ref7;
      }

      _Class.prototype.template = $("#freeform-layout").html();

      _Class.prototype.configTemplate = $("#freeform-layout-settings").html();

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender", "beforeRender");
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {};

      _Class.prototype.beforeRender = function() {
        var modal, self;
        self = this;
        if ($(".modal").length === 0) {
          modal = window.launchModal(_.template(this.configTemplate, this.model.toJSON()));
        } else {
          modal = $(".modal").first();
        }
        return modal.delegate(".submit", "click", function() {
          var cols, rows;
          cols = parseInt($(".set-columns").val());
          rows = parseInt($(".set-rows").val());
          if (!validNumber(cols)) {
            cols = 2;
          }
          if (!validNumber(rows)) {
            rows = 2;
          }
          self.model.set("rows", rows, {
            silent: true
          });
          self.model.set("columns", cols, {
            silent: true
          });
          return self.model.trigger("renderBase");
        });
      };

      return _Class;

    })(window.views["layout"]);
    return window.views['BlankLayout'] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref8 = _Class.__super__.constructor.apply(this, arguments);
        return _ref8;
      }

      _Class.prototype.template = $("#blank-layout").html();

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender");
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {
        return this.$el.addClass("blank-layout");
      };

      return _Class;

    })(window.views["layout"]);
  });

}).call(this);
