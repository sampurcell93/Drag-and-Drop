// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    window.collections.Layouts = Backbone.Collection.extend({
      url: '/layout',
      initialize: function() {
        var self;
        self = this;
        return this.fetch({
          success: function() {
            return window.layoutList = new views.LayoutList({
              collection: self
            });
          }
        });
      }
    });
    window.models.Layout = Backbone.Model.extend({});
    window.views.LayoutItem = Backbone.View.extend({
      tagName: 'li',
      template: $("#layout-item").html(),
      render: function() {
        this.$el.html(_.template(this.template, this.model.toJSON()));
        return this;
      },
      events: {
        "click": function(e) {
          $(e.target).toggleClass("selected-layout").siblings().removeClass("selected-layout");
          return window.layoutList.selected = this.model;
        }
      }
    });
    window.views.LayoutList = Backbone.View.extend({
      tagName: 'div class="modal"',
      template: $("#picker-interface").html(),
      initialize: function() {
        _.bindAll(this, "render");
        return this.render();
      },
      render: function() {
        var $el, self;
        self = this;
        $el = this.$el;
        $el.append(_.template(this.template, {}));
        _.each(this.collection.models, function(layout) {
          return $el.find(".layout-list").append(new views.LayoutItem({
            model: layout
          }).render().el);
        });
        return $(document.body).addClass("active-modal").append($el);
      },
      events: {
        'click .try-layout': function() {
          if (this.selected == null) {
            return alert("you must choose a layout");
          } else {
            return this.applyLayout(allSections.at(sectionIndex).get("currentSection"));
          }
        }
      },
      applyLayout: function(collection) {
        var styling;
        styling = this.selected.get("styling");
        return _.each(collection.models, function(el) {
          if (el.get("layout-item") === true) {
            return el.set("styles", styling);
          }
        });
      }
    });
    return window.layoutList = null;
  });

}).call(this);
