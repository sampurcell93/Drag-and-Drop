// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(document).ready(function() {
    var allLayouts, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;
    allLayouts = [
      {
        type: 'Dynamic Layout',
        view: 'dynamicLayout'
      }, {
        type: 'Dynamic Container',
        view: 'dynamicContainer'
      }, {
        type: 'Tabbed Layout',
        view: 'tabs'
      }
    ];
    window.models.Layout = (function(_super) {
      __extends(Layout, _super);

      function Layout() {
        _ref = Layout.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      return Layout;

    })(window.models.Element);
    window.collections.Layouts = Backbone.Collection.extend({
      model: models.Layout
    });
    window.views.LayoutList = Backbone.View.extend({
      el: ".layout-types ul",
      template: $("#picker-interface").html(),
      initialize: function() {
        this.controller = this.options.controller;
        this.collection = new collections.Layouts(allLayouts);
        this.wrapper = $(".control-section").eq(this.controller.index);
        this.$el = this.wrapper.find(this.el);
        this.el = this.$el.get();
        return this.render();
      },
      render: function() {
        var $el;
        $el = this.$el;
        _.each(this.collection.models, function(layout) {
          return $el.append(new views.OutsideDraggableItem({
            model: layout
          }).render().el);
        });
        return this;
      }
    });
    window.views.layout = (function(_super) {
      __extends(layout, _super);

      function layout() {
        _ref1 = layout.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      layout.prototype.initialize = function() {
        var self;
        this.model.set("layout", true);
        layout.__super__.initialize.apply(this, arguments);
        self = this;
        this.$el.addClass("layout-wrapper");
        this.listenTo(this.model.get("child_els"), "add", function(m, c, o) {
          if ((c != null) && c.length) {
            return self.$el.children(".placeholder").hide();
          } else {
            return self.$el.children(".placeholder").show();
          }
        });
        return _.extend(this.events, {
          "click .ungroup-fields": function() {
            var child, children, i, model, parent, position, to_remove, _i, _len, _ref2;
            model = this.model;
            position = model.collection.indexOf(model);
            children = model.get("child_els");
            parent = model.collection;
            to_remove = [];
            _ref2 = children.models;
            for (i = _i = 0, _len = _ref2.length; _i < _len; i = ++_i) {
              child = _ref2[i];
              child['layout-item'] = false;
              child.collection = null;
              parent.add(child, {
                at: position + i
              });
            }
            children.reset();
            return model.destroy();
          }
        });
      };

      return layout;

    })(window.views.draggableElement);
    /* Inherited view events are triggered first - so if an indentical event binder is
        applied to a descendant, we can use event.stopPropagation() in order to stop the 
        higher level event from firing.
    */

    window.views["dynamicLayout"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref2 = _Class.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      _Class.prototype.configTemplate = $("#dynamic-layout-setup").html();

      _Class.prototype.template = $("#dynamic-layout").html();

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender", "beforeRender");
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {};

      _Class.prototype.beforeRender = function() {
        var modal, self;
        self = this;
        if ($(".modal").length === 0) {
          modal = window.launchModal(_.template(this.configTemplate, this.model.toJSON()));
        } else {
          modal = $(".modal").first();
        }
        return modal.delegate(".submit", "click", function() {});
      };

      return _Class;

    })(window.views["layout"]);
    window.views["dynamicContainer"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref3 = _Class.__super__.constructor.apply(this, arguments);
        return _ref3;
      }

      _Class.prototype.template = $("#dynamic-container").html();

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender");
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {};

      return _Class;

    })(window.views["layout"]);
    window.views["tabItem"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref4 = _Class.__super__.constructor.apply(this, arguments);
        return _ref4;
      }

      _Class.prototype.events = {
        "keyup h3:first-child": function(e) {
          var $t;
          $t = $(e.currentTarget);
          console.log($t);
          return this.model.set("title", $t.text());
        },
        "click": "showTabContent"
      };

      _Class.prototype.initialize = function() {
        _Class.__super__.initialize.apply(this, arguments);
        console.log("making new tab item");
        _.bindAll(this, "afterRender", "showTabContent");
        return this.model.get("child_els").on("remove", this.showTabContent);
      };

      _Class.prototype.appendChild = function(model) {
        _Class.__super__.appendChild.apply(this, arguments);
        return this.$el.children("h3").first().trigger("click");
      };

      _Class.prototype.afterRender = function() {
        return this.$el.css("display", "inline-block !important").children("h3").first().attr("contentEditable", true).addClass("no-drag").trigger("click");
      };

      _Class.prototype.showTabContent = function() {
        var $el, column_types, num_per_row, offset, siblings, wrap_height;
        console.log("showTabContent");
        column_types = ["two", "three", "four", "five", "six"];
        $el = this.$el;
        siblings = $el.siblings(".builder-element").length + 1;
        num_per_row = null;
        _.each(column_types, function(num, i) {
          if ($el.closest(".tab-layout").hasClass("column " + num)) {
            return num_per_row = i + 3;
          }
        });
        offset = Math.floor(siblings / num_per_row);
        offset = 30 + 50 * offset;
        console.log($el.children(".children"));
        $el.children(".children").css({
          "top": 20 + offset + "px"
        });
        $el.addClass("active-tab").siblings().removeClass("active-tab");
        wrap_height = $el.height() + $el.children(".children").height();
        console.log(wrap_height);
        $el.closest(".tab-layout").css("height", wrap_height + offset + 12 + "px");
        console.log("done", $el.height() + $el.children(".children").height());
        return this.$el.children(".config-menu-wrap").css({
          "top": offset + 22 + "px",
          "right": "26px"
        });
      };

      return _Class;

    })(views["draggableElement"]);
    window.views["tabs"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref5 = _Class.__super__.constructor.apply(this, arguments);
        return _ref5;
      }

      _Class.prototype.template = $("#tab-layout").html();

      _Class.prototype.initialize = function() {
        var self;
        _.bindAll(this, "afterRender");
        self = this;
        this.listenTo(this.model.get("child_els"), {
          "add": this.formatNewModel,
          "remove": function(m, c, o) {
            if (c.length === 0) {
              return self.$el.children(".placeholder-text").show();
            }
          }
        });
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {
        var self, tabs;
        cc("tabs after rendering");
        this.$el.addClass("tab-layout column six");
        tabs = this.model.get("child_els");
        self = this;
        console.log(tabs.models);
        return _.each(tabs.models, function(tab) {
          return self.formatNewModel(tab);
        });
      };

      _Class.prototype.formatNewModel = function(model, collection, options) {
        var $el;
        model.set("view", "tabItem");
        $el = this.$el;
        return $el.children(".placeholder-text").hide();
      };

      return _Class;

    })(window.views["layout"]);
    window.views["Freeform"] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref6 = _Class.__super__.constructor.apply(this, arguments);
        return _ref6;
      }

      _Class.prototype.template = $("#freeform-layout").html();

      _Class.prototype.configTemplate = $("#freeform-layout-settings").html();

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender", "beforeRender");
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {};

      _Class.prototype.beforeRender = function() {
        var modal, self;
        self = this;
        if ($(".modal").length === 0) {
          modal = window.launchModal(_.template(this.configTemplate, this.model.toJSON()));
        } else {
          modal = $(".modal").first();
        }
        return modal.delegate(".submit", "click", function() {
          var cols, rows;
          cols = parseInt($(".set-columns").val());
          rows = parseInt($(".set-rows").val());
          if (!validNumber(cols)) {
            cols = 2;
          }
          if (!validNumber(rows)) {
            rows = 2;
          }
          self.model.set("rows", rows, {
            silent: true
          });
          self.model.set("columns", cols, {
            silent: true
          });
          return self.model.trigger("renderBase");
        });
      };

      return _Class;

    })(window.views["layout"]);
    return window.views['BlankLayout'] = (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref7 = _Class.__super__.constructor.apply(this, arguments);
        return _ref7;
      }

      _Class.prototype.template = $("#blank-layout").html();

      _Class.prototype.initialize = function() {
        _.bindAll(this, "afterRender");
        return _Class.__super__.initialize.apply(this, arguments);
      };

      _Class.prototype.afterRender = function() {
        return this.$el.addClass("blank-layout");
      };

      return _Class;

    })(window.views["layout"]);
  });

}).call(this);
